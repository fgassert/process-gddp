#!/bin/bash

set -x -e

VPC=vpc-5fc4203a
INSTANCE=m4.2xlarge
IAMROLE=s3full
THREADS=32
MACHINE=default
DISKSIZE=80
SPOTPRICE=1
VOLUMETYPE=gp2
IOPS=1500
SCRIPT=process_annual.py
LOGS=process-gddp.log
WORKDIR=.
RM=0
NAME=process-gddp

while getopts avrs:t:n:i:d:p:o: opt; do
    case $opt in
        a)
            MACHINE=aws-machine
            ;;
        s)
            SCRIPT=$OPTARG
            ;;
        t)
            THREADS=$OPTARG
            ;;
        v)
            WORKDIR=/usr/store
            ;;
        n)
            NAME=$OPTARG
            ;;
        r)
            RM=1
            ;;
        i)
            INSTANCE=$OPTARG
            ;;
        d)
            DISKSIZE=$OPTARG
            ;;
        p)
            SPOTPRICE=$OPTARG
            ;;
        o)
            VOLUMETYPE=io1
            IOPS=$OPTARG
    esac
done

if [ "$MACHINE" = "aws-machine" ]
then
    ../docker-machine/bin/docker-machine-Darwin-x86_64 rm -f $MACHINE
    aws ec2 delete-key-pair --key-name=$MACHINE
    ../docker-machine/bin/docker-machine-Darwin-x86_64 create -d amazonec2 \
                   --amazonec2-vpc-id=$VPC \
                   --amazonec2-instance-type=$INSTANCE \
                   --amazonec2-iam-instance-profile=$IAMROLE \
                   --amazonec2-root-size=$DISKSIZE \
                   --amazonec2-request-spot-instance \
                   --amazonec2-volume-type=$VOLUMETYPE \
                   --amazonec2-iops=$IOPS \
                   --amazonec2-spot-price=$SPOTPRICE \
                   $MACHINE;
fi

eval $(../docker-machine/bin/docker-machine-Darwin-x86_64 env $MACHINE)

docker build -t $NAME .
docker run -t --name $NAME \
       -v /mnt:/usr/store \
       -e AWS_ACCESS_KEY_ID \
       -e AWS_SECRET_ACCESS_KEY \
       $NAME:latest python $SCRIPT $THREADS $WORKDIR
docker logs $NAME > $LOGS
docker rm $NAME

if [ "$RM" = "1" ]
then
    docker-machine stop $MACHINE
    docker-machine rm -f $MACHINE
    aws ec2 delete-key-pair --key-name=$MACHINE
fi
